basePath: /api/v1
definitions:
  backuppb.BackupInfo:
    properties:
      backup_timestamp:
        description: backup timestamp
        type: integer
      collection_backups:
        description: array of collection backup
        items:
          $ref: '#/definitions/backuppb.CollectionBackupInfo'
        type: array
      end_time:
        type: integer
      errorMessage:
        type: string
      id:
        type: string
      milvus_version:
        type: string
      name:
        type: string
      progress:
        type: integer
      size:
        type: integer
      start_time:
        type: integer
      state_code:
        $ref: '#/definitions/backuppb.BackupTaskStateCode'
    type: object
  backuppb.BackupInfoResponse:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/backuppb.ResponseCode'
        description: response code. 0 means success. others are fail
      data:
        allOf:
        - $ref: '#/definitions/backuppb.BackupInfo'
        description: backup info entity
      msg:
        description: error msg if fail
        type: string
      requestId:
        description: uuid of the request to response
        type: string
    type: object
  backuppb.BackupTaskStateCode:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - BackupTaskStateCode_BACKUP_INITIAL
    - BackupTaskStateCode_BACKUP_EXECUTING
    - BackupTaskStateCode_BACKUP_SUCCESS
    - BackupTaskStateCode_BACKUP_FAIL
    - BackupTaskStateCode_BACKUP_TIMEOUT
  backuppb.Binlog:
    properties:
      entries_num:
        type: integer
      log_path:
        type: string
      log_size:
        type: integer
      timestamp_from:
        type: integer
      timestamp_to:
        type: integer
    type: object
  backuppb.CollectionBackupInfo:
    properties:
      backup_physical_timestamp:
        description: physical unix time of backup
        type: integer
      backup_timestamp:
        description: logical time of backup, used for restore
        type: integer
      collection_id:
        type: integer
      collection_name:
        type: string
      consistency_level:
        $ref: '#/definitions/backuppb.ConsistencyLevel'
      db_name:
        type: string
      end_time:
        type: integer
      errorMessage:
        type: string
      has_index:
        type: boolean
      id:
        type: string
      index_infos:
        items:
          $ref: '#/definitions/backuppb.IndexInfo'
        type: array
      load_state:
        type: string
      partition_backups:
        items:
          $ref: '#/definitions/backuppb.PartitionBackupInfo'
        type: array
      progress:
        type: integer
      schema:
        $ref: '#/definitions/backuppb.CollectionSchema'
      shards_num:
        type: integer
      size:
        type: integer
      start_time:
        type: integer
      state_code:
        $ref: '#/definitions/backuppb.BackupTaskStateCode'
    type: object
  backuppb.CollectionSchema:
    properties:
      autoID:
        type: boolean
      description:
        type: string
      enable_dynamic_field:
        type: boolean
      fields:
        items:
          $ref: '#/definitions/backuppb.FieldSchema'
        type: array
      name:
        type: string
    type: object
  backuppb.ConsistencyLevel:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - ConsistencyLevel_Strong
    - ConsistencyLevel_Session
    - ConsistencyLevel_Bounded
    - ConsistencyLevel_Eventually
    - ConsistencyLevel_Customized
  backuppb.CreateBackupRequest:
    properties:
      async:
        description: async or not
        type: boolean
      backup_name:
        description: backup name, will generate one if not set
        type: string
      collection_names:
        description: collection names to backup, empty to backup all
        items:
          type: string
        type: array
      db_collections:
        description: database and collections to backup. A json string. To support
          database. 2023.7.7
        type: string
      requestId:
        description: uuid of request, will generate one if not set
        type: string
    type: object
  backuppb.DataType:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 10
    - 11
    - 20
    - 21
    - 100
    - 101
    type: integer
    x-enum-varnames:
    - DataType_None
    - DataType_Bool
    - DataType_Int8
    - DataType_Int16
    - DataType_Int32
    - DataType_Int64
    - DataType_Float
    - DataType_Double
    - DataType_String
    - DataType_VarChar
    - DataType_BinaryVector
    - DataType_FloatVector
  backuppb.DeleteBackupResponse:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/backuppb.ResponseCode'
        description: response code. 0 means success. others are fail
      msg:
        description: error msg if fail
        type: string
      requestId:
        description: uuid of the request to response
        type: string
    type: object
  backuppb.FieldBinlog:
    properties:
      binlogs:
        items:
          $ref: '#/definitions/backuppb.Binlog'
        type: array
      fieldID:
        type: integer
    type: object
  backuppb.FieldSchema:
    properties:
      autoID:
        type: boolean
      data_type:
        $ref: '#/definitions/backuppb.DataType'
      default_value:
        $ref: '#/definitions/backuppb.ValueField'
      description:
        type: string
      element_type:
        $ref: '#/definitions/backuppb.DataType'
      fieldID:
        type: integer
      index_params:
        items:
          $ref: '#/definitions/backuppb.KeyValuePair'
        type: array
      is_dynamic:
        type: boolean
      is_partition_key:
        type: boolean
      is_primary_key:
        type: boolean
      name:
        type: string
      state:
        $ref: '#/definitions/backuppb.FieldState'
      type_params:
        items:
          $ref: '#/definitions/backuppb.KeyValuePair'
        type: array
    type: object
  backuppb.FieldState:
    enum:
    - 0
    - 1
    - 2
    - 3
    type: integer
    x-enum-varnames:
    - FieldState_FieldCreated
    - FieldState_FieldCreating
    - FieldState_FieldDropping
    - FieldState_FieldDropped
  backuppb.IndexInfo:
    properties:
      field_name:
        type: string
      index_name:
        type: string
      index_type:
        type: string
      params:
        additionalProperties:
          type: string
        type: object
    type: object
  backuppb.KeyValuePair:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  backuppb.ListBackupsResponse:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/backuppb.ResponseCode'
        description: response code. 0 means success. others are fail
      data:
        description: backup info entities
        items:
          $ref: '#/definitions/backuppb.BackupInfo'
        type: array
      msg:
        description: error msg if fail
        type: string
      requestId:
        description: uuid of the request to response
        type: string
    type: object
  backuppb.PartitionBackupInfo:
    properties:
      collection_id:
        type: integer
      load_state:
        type: string
      partition_id:
        type: integer
      partition_name:
        type: string
      segment_backups:
        description: array of segment backup
        items:
          $ref: '#/definitions/backuppb.SegmentBackupInfo'
        type: array
      size:
        type: integer
    type: object
  backuppb.ResponseCode:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 400
    - 404
    type: integer
    x-enum-varnames:
    - ResponseCode_Success
    - ResponseCode_Not_Support
    - ResponseCode_No_Permission
    - ResponseCode_Fail
    - ResponseCode_Parameter_Error
    - ResponseCode_Request_Object_Not_Found
  backuppb.RestoreBackupRequest:
    properties:
      async:
        description: execute asynchronously or not
        type: boolean
      backup_name:
        description: backup name to restore
        type: string
      bucket_name:
        description: if bucket_name and path is set. will override bucket/path in
          config.
        type: string
      collection_names:
        description: collections to restore
        items:
          type: string
        type: array
      collection_renames:
        additionalProperties:
          type: string
        description: |-
          2, give a map to rename the collections, if not given, use the original name.
          collection_renames has higher priority than collection_suffix
        type: object
      collection_suffix:
        description: |-
          Support two ways to rename the collections while recover
          1, set a suffix
        type: string
      db_collections:
        description: database and collections to restore. A json string. To support
          database. 2023.7.7
        type: string
      path:
        description: if bucket_name and path is set. will override bucket/path in
          config.
        type: string
      requestId:
        description: uuid of request, will generate one if not set
        type: string
    type: object
  backuppb.RestoreBackupResponse:
    properties:
      code:
        allOf:
        - $ref: '#/definitions/backuppb.ResponseCode'
        description: response code. 0 means success. others are fail
      data:
        allOf:
        - $ref: '#/definitions/backuppb.RestoreBackupTask'
        description: restore task info entity
      msg:
        description: error msg if fail
        type: string
      requestId:
        description: uuid of the request to response
        type: string
    type: object
  backuppb.RestoreBackupTask:
    properties:
      collection_restore_tasks:
        items:
          $ref: '#/definitions/backuppb.RestoreCollectionTask'
        type: array
      end_time:
        type: integer
      errorMessage:
        type: string
      id:
        type: string
      progress:
        type: integer
      restored_size:
        type: integer
      start_time:
        type: integer
      state_code:
        $ref: '#/definitions/backuppb.RestoreTaskStateCode'
      to_restore_size:
        type: integer
    type: object
  backuppb.RestoreCollectionTask:
    properties:
      coll_backup:
        $ref: '#/definitions/backuppb.CollectionBackupInfo'
      end_time:
        type: integer
      errorMessage:
        type: string
      id:
        type: string
      partition_restore_tasks:
        items:
          $ref: '#/definitions/backuppb.RestorePartitionTask'
        type: array
      progress:
        type: integer
      restored_size:
        type: integer
      start_time:
        type: integer
      state_code:
        $ref: '#/definitions/backuppb.RestoreTaskStateCode'
      target_collection_name:
        type: string
      to_restore_size:
        type: integer
    type: object
  backuppb.RestorePartitionTask:
    properties:
      end_time:
        type: integer
      errorMessage:
        type: string
      id:
        type: string
      part_backup:
        $ref: '#/definitions/backuppb.PartitionBackupInfo'
      progress:
        type: integer
      start_time:
        type: integer
      state_code:
        $ref: '#/definitions/backuppb.RestoreTaskStateCode'
    type: object
  backuppb.RestoreTaskStateCode:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - RestoreTaskStateCode_INITIAL
    - RestoreTaskStateCode_EXECUTING
    - RestoreTaskStateCode_SUCCESS
    - RestoreTaskStateCode_FAIL
    - RestoreTaskStateCode_TIMEOUT
  backuppb.SegmentBackupInfo:
    properties:
      binlogs:
        items:
          $ref: '#/definitions/backuppb.FieldBinlog'
        type: array
      collection_id:
        type: integer
      deltalogs:
        items:
          $ref: '#/definitions/backuppb.FieldBinlog'
        type: array
      group_id:
        description: |-
          separate segments into multi groups by size,
          segments in one group will be copied into one directory during backup
          and will bulkinsert in one call during restore
        type: integer
      num_of_rows:
        type: integer
      partition_id:
        type: integer
      segment_id:
        type: integer
      size:
        type: integer
      statslogs:
        items:
          $ref: '#/definitions/backuppb.FieldBinlog'
        type: array
    type: object
  backuppb.ValueField:
    properties:
      data:
        description: "Types that are valid to be assigned to Data:\n\t*ValueField_BoolData\n\t*ValueField_IntData\n\t*ValueField_LongData\n\t*ValueField_FloatData\n\t*ValueField_DoubleData\n\t*ValueField_StringData\n\t*ValueField_BytesData"
    type: object
info:
  contact:
    email: wayasxxx@gmail.com
    name: wanganyang
  description: A data backup & restore tool for Milvus
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Milvus Backup Service
  version: "1.0"
paths:
  /create:
    post:
      consumes:
      - application/json
      description: Create a backup with the given name and collections
      parameters:
      - description: request_id
        in: header
        name: request_id
        required: true
        type: string
      - description: CreateBackupRequest JSON
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/backuppb.CreateBackupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backuppb.BackupInfoResponse'
      summary: Create backup interface
      tags:
      - Backup
  /delete:
    delete:
      description: Delete a backup with the given name
      parameters:
      - description: request_id
        in: header
        name: request_id
        required: true
        type: string
      - description: backup_name
        in: query
        name: backup_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backuppb.DeleteBackupResponse'
      summary: Delete backup interface
      tags:
      - Backup
  /get_backup:
    get:
      description: Get the backup with the given name or id
      parameters:
      - description: request_id
        in: header
        name: request_id
        required: true
        type: string
      - description: backup_name
        in: query
        name: backup_name
        required: true
        type: string
      - description: backup_id
        in: query
        name: backup_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backuppb.BackupInfoResponse'
      summary: Get backup interface
      tags:
      - Backup
  /get_restore:
    get:
      description: Get restore task state with the given id
      parameters:
      - description: request_id
        in: header
        name: request_id
        required: true
        type: string
      - description: id
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backuppb.RestoreBackupResponse'
      summary: Get restore interface
      tags:
      - Restore
  /list:
    get:
      description: List all backups in current storage
      parameters:
      - description: request_id
        in: header
        name: request_id
        required: true
        type: string
      - description: collection_name
        in: query
        name: collection_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backuppb.ListBackupsResponse'
      summary: List Backups interface
      tags:
      - Backup
  /restore:
    post:
      consumes:
      - application/json
      description: Submit a request to restore the data from backup
      parameters:
      - description: request_id
        in: header
        name: request_id
        required: true
        type: string
      - description: RestoreBackupRequest JSON
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/backuppb.RestoreBackupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/backuppb.RestoreBackupResponse'
      summary: Restore interface
      tags:
      - Restore
swagger: "2.0"
